<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>5</ID>
      <Description>"SCRIPTS"</Description>
      <Options moAllowManualCollapseAndExpand="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Unlimited Timer"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : JustCause3.exe
  Version: 
  Date   : 2024-03-08
  Author : atult

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(timer,JustCause3.exe,F3 0F 10 01 C3 53) // should be unique
alloc(newmem,$1000,timer)

label(code)
label(return)

newmem:

code:
  mov [rcx],(float)100
  movss xmm0,[rcx]
  ret 
  jmp return

timer:
  jmp newmem
return:
registersymbol(timer)

[DISABLE]

timer:
  db F3 0F 10 01 C3

unregistersymbol(timer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: JustCause3.exe+382A71F

JustCause3.exe+382A6FE: 80 7A 18 00                 - cmp byte ptr [rdx+18],00
JustCause3.exe+382A702: 48 8B 42 08                 - mov rax,[rdx+08]
JustCause3.exe+382A706: 44 8B 00                    - mov r8d,[rax]
JustCause3.exe+382A709: 74 0D                       - je JustCause3.exe+382A718
JustCause3.exe+382A70B: 48 8B 41 10                 - mov rax,[rcx+10]
JustCause3.exe+382A70F: 49 8B 0C 00                 - mov rcx,[r8+rax]
JustCause3.exe+382A713: F3 0F 10 01                 - movss xmm0,[rcx]
JustCause3.exe+382A717: C3                          - ret 
JustCause3.exe+382A718: 4C 89 C1                    - mov rcx,r8
JustCause3.exe+382A71B: 49 03 49 10                 - add rcx,[r9+10]
// ---------- INJECTING HERE ----------
JustCause3.exe+382A71F: F3 0F 10 01                 - movss xmm0,[rcx]
// ---------- DONE INJECTING  ----------
JustCause3.exe+382A723: C3                          - ret 
JustCause3.exe+382A724: 53                          - push rbx
JustCause3.exe+382A725: A0 A9 F3 0F 10 44 24 10 C3  - mov al,[C3102444100FF3A9]
JustCause3.exe+382A72E: 00 00                       - add [rax],al
JustCause3.exe+382A730: 00 00                       - add [rax],al
JustCause3.exe+382A732: 00 00                       - add [rax],al
JustCause3.exe+382A734: 00 00                       - add [rax],al
JustCause3.exe+382A736: CC                          - int 3 
JustCause3.exe+382A737: CC                          - int 3 
JustCause3.exe+382A738: CC                          - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Unlimited Ammo"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : JustCause3.exe
  Version: 
  Date   : 2024-03-08
  Author : atult

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ammo,JustCause3.exe,41 8B 9C 24 28 02 00 00) // should be unique
alloc(newmem,$1000,ammo)

label(code)
label(return)

newmem:

code:
  mov [r12+228],(int)10
  mov ebx,[r12+00000228]
  jmp return

ammo:
  jmp newmem
  nop 3
return:
registersymbol(ammo)

[DISABLE]

ammo:
  db 41 8B 9C 24 28 02 00 00

unregistersymbol(ammo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: JustCause3.exe+46F957F

JustCause3.exe+46F954E: 74 0C                       - je JustCause3.exe+46F955C
JustCause3.exe+46F9550: F0 FF 47 08                 - lock inc [rdi+08]
JustCause3.exe+46F9554: 48 8B 7D AF                 - mov rdi,[rbp-51]
JustCause3.exe+46F9558: 4C 8B 65 A7                 - mov r12,[rbp-59]
JustCause3.exe+46F955C: 4D 85 E4                    - test r12,r12
JustCause3.exe+46F955F: 0F 84 28 01 00 00           - je JustCause3.exe+46F968D
JustCause3.exe+46F9565: 41 83 BC 24 24 02 00 00 04  - cmp dword ptr [r12+00000224],04
JustCause3.exe+46F956E: 0F 87 0E 01 00 00           - ja JustCause3.exe+46F9682
JustCause3.exe+46F9574: 48 8B 4E 60                 - mov rcx,[rsi+60]
JustCause3.exe+46F9578: 48 81 C1 80 09 00 00        - add rcx,00000980
// ---------- INJECTING HERE ----------
JustCause3.exe+46F957F: 41 8B 9C 24 28 02 00 00     - mov ebx,[r12+00000228]
// ---------- DONE INJECTING  ----------
JustCause3.exe+46F9587: 41 8B 94 24 24 02 00 00     - mov edx,[r12+00000224]
JustCause3.exe+46F958F: E8 2C 07 4D FF              - call JustCause3.exe+3BC9CC0
JustCause3.exe+46F9594: 41 89 C6                    - mov r14d,eax
JustCause3.exe+46F9597: 4C 89 E1                    - mov rcx,r12
JustCause3.exe+46F959A: E8 81 94 57 FF              - call JustCause3.exe+3C72A20
JustCause3.exe+46F959F: 41 01 DE                    - add r14d,ebx
JustCause3.exe+46F95A2: 75 37                       - jne JustCause3.exe+46F95DB
JustCause3.exe+46F95A4: 83 7E 68 02                 - cmp dword ptr [rsi+68],02
JustCause3.exe+46F95A8: 0F 84 D0 00 00 00           - je JustCause3.exe+46F967E
JustCause3.exe+46F95AE: 48 8B 4E 60                 - mov rcx,[rsi+60]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :mov ebx,[r12+00000228] (ammo)</Description>
      <AddressString>JustCause3.exe+46F957F</AddressString>
      <Before>
        <Byte>C1</Byte>
        <Byte>80</Byte>
        <Byte>09</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>9C</Byte>
        <Byte>24</Byte>
        <Byte>28</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>41</Byte>
        <Byte>8B</Byte>
        <Byte>94</Byte>
        <Byte>24</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss xmm0,[rcx] (Timer)</Description>
      <AddressString>JustCause3.exe+382A71F</AddressString>
      <Before>
        <Byte>C1</Byte>
        <Byte>49</Byte>
        <Byte>03</Byte>
        <Byte>49</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>53</Byte>
        <Byte>A0</Byte>
        <Byte>A9</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[rcx+rax*4+000001B0] (Total ammo)</Description>
      <AddressString>JustCause3.exe+3BC9CC3</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>48</Byte>
        <Byte>63</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>84</Byte>
        <Byte>81</Byte>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>00</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
