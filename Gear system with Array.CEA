{$lua}

if synataxcheck then return end

[ENABLE]

local mul=1.1
local jerk=2
local gearMul=3
local gearArr={8,16,30,64,128}
local maxGearArrIndex=5
local gearArrIndex=1
local div=1.12
local speedXString='xspeed'
local speedYString='yspeed'
local speedZString='zspeed'

--Instructions
--mul is the multiplier by which the car will accelerate if the speed of the car is lower than top speed.
--gearMul is the multiplier by which the speed of the car will be brought down if it is higher than the top Speed.
--gearArr is the array of top speeds of each gear.
--maxGearArrIndex is the length of the gearArr array.
--gearArrIndex points to the index of the gear the car is in at a particular point in time. But initially this value should be 1 only.
--jerk is the multiplier/divider for mul.Increasing mul results in higher power and decreasing mul results in lower power.
--Gear is increased by W and decreased by S
--When trying to use this script in a game just adjust speedStrings , gearArr values accordin to the game.
--If you want to increase the size the number of gears then make gearArr array bigger and set the maxGearArrIndex to the size of the gearArr array.

local TempUp=gearArr[gearArrIndex]


t=getAddressList()
x=t.getMemoryRecordByDescription(speedXString)
y=t.getMemoryRecordByDescription(speedYString)
z=t.getMemoryRecordByDescription(speedZString)


function adjustSpeed(x,y,tempUp,speedUp)
  if tempUp>=gearArr[gearArrIndex] then
	r=((x.Value^2)+(y.Value^2)+(z.Value^2))^0.5
	if r<=tempUp then
      if r*mul<=tempUp then
        if speedUp then
          x.Value=x.Value*mul
          y.Value=y.Value*mul
          z.Value=z.Value*mul
        end
      else
        if speedUp then
          local ratio=tempUp/r
          x.Value=x.Value*ratio
          y.Value=y.Value*ratio
          z.Value=z.Value*ratio
        end
      end
    else
      if (r/gearMul)>=tempUp then
        x.Value=x.Value/gearMul
        y.Value=y.Value/gearMul
        z.Value=z.Value/gearMul
      else
        local ratio=tempUp/r
        x.Value=x.Value*ratio
        y.Value=y.Value*ratio
        z.Value=z.Value*ratio
      end
    end
  end
end


normal=createHotkey(function()
adjustSpeed(x,y,TempUp,true)
end,0x26) --UP key


up=createHotkey(function()
if gearArrIndex < maxGearArrIndex then
   gearArrIndex=gearArrIndex+1
   TempUp=gearArr[gearArrIndex]
end
adjustSpeed(x,y,TempUp,false)
end,0x57) --W

down=createHotkey(function()
if gearArrIndex > 1 then
   gearArrIndex=gearArrIndex-1
   TempUp=gearArr[gearArrIndex]
end
adjustSpeed(x,y,TempUp,false)
end,0x53) --S

reset=createHotkey(function()
gearArrIndex=1
TempUp=gearArr[gearArrIndex]
adjustSpeed(x,y,TempUp,false)
end,0x20) --SPACE


mulInc=createHotkey(function()
mul=mul*jerk
end,0x45) --E

mulDec=createHotkey(function()
mul=mul/jerk
end,0x44) --D


brake=createHotkey(function()
x.Value=x.Value/div
y.Value=y.Value/div
end,0x28) --Down



[DISABLE]
normal.destroy()
up.destroy()
down.destroy()
reset.destroy()
mulInc.destroy()
mulDec.destroy()
brake.destroy()
