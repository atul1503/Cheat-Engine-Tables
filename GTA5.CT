<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="27">
  <CheatEntries>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Infinite health and fast movement speed"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GTA5.exe
  Version: 
  Date   : 2023-11-11
  Author : atult

[rdi] = player health
[rdi+384]= player movement speed, only walking and running.

To modify these values, see code label.

running will be faster than walking.

}

[ENABLE]

aobscanmodule(inf_health,GTA5.exe,F3 0F 10 17 BA 8F 47 CF 05) // should be unique
alloc(newmem,$1000,"GTA5.exe"+41DFC0)

label(code)
label(return)

newmem:

code:
  mov [rdi],(float)300
  mov [rdi+384],(float)1
  movss xmm2,[rdi]
  mov edx,05CF478F
  jmp return

inf_health:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(inf_health)

[DISABLE]

inf_health:
  db F3 0F 10 17 BA 8F 47 CF 05

unregistersymbol(inf_health)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GTA5.exe"+41DFC0

"GTA5.exe"+41DFA0: 75 11                       -  jne GTA5.exe+41DFB3
"GTA5.exe"+41DFA2: F3 48 0F 2C 0F              -  cvttss2si rcx,[rdi]
"GTA5.exe"+41DFA7: F3 48 0F 2C D0              -  cvttss2si rdx,xmm0
"GTA5.exe"+41DFAC: E8 7F 71 F4 FF              -  call GTA5.exe+365130
"GTA5.exe"+41DFB1: B1 01                       -  mov cl,01
"GTA5.exe"+41DFB3: 8B 07                       -  mov eax,[rdi]
"GTA5.exe"+41DFB5: 89 03                       -  mov [rbx],eax
"GTA5.exe"+41DFB7: 48 8B 5B 10                 -  mov rbx,[rbx+10]
"GTA5.exe"+41DFBB: 48 3B DF                    -  cmp rbx,rdi
"GTA5.exe"+41DFBE: 75 D5                       -  jne GTA5.exe+41DF95
// ---------- INJECTING HERE ----------
"GTA5.exe"+41DFC0: F3 0F 10 17                 -  movss xmm2,[rdi]
"GTA5.exe"+41DFC4: BA 8F 47 CF 05              -  mov edx,05CF478F
// ---------- DONE INJECTING  ----------
"GTA5.exe"+41DFC9: 48 8B CD                    -  mov rcx,rbp
"GTA5.exe"+41DFCC: E8 77 C5 E3 00              -  call GTA5.exe+125A548
"GTA5.exe"+41DFD1: F3 0F 10 96 A0 02 00 00     -  movss xmm2,[rsi+000002A0]
"GTA5.exe"+41DFD9: BA 5D E6 B3 23              -  mov edx,23B3E65D
"GTA5.exe"+41DFDE: 48 8B CD                    -  mov rcx,rbp
"GTA5.exe"+41DFE1: E8 62 C5 E3 00              -  call GTA5.exe+125A548
"GTA5.exe"+41DFE6: 0F 29 35 83 B7 B8 01        -  movaps [GTA5.exe+1FA9770],xmm6
"GTA5.exe"+41DFED: 65 48 8B 0C 25 58 00 00 00  -  mov rcx,gs:[00000058]
"GTA5.exe"+41DFF6: 8B 05 60 EB A1 02           -  mov eax,[GTA5.exe+2E3CB5C]
"GTA5.exe"+41DFFC: BA A0 00 00 00              -  mov edx,000000A0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"No wanted level"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GTA5.exe
  Version: 
  Date   : 2023-11-11
  Author : atult

  No wanted level
}

[ENABLE]

aobscanmodule(wanted_level,GTA5.exe,8B 90 98 00 00 00 83 EA 02 74 20) // should be unique
alloc(newmem,$1000,"GTA5.exe"+69D6BF)

label(code)
label(return)

newmem:

code:
  mov [rax+98],0
  mov edx,[rax+00000098]
  jmp return

wanted_level:
  jmp newmem
  nop
return:
registersymbol(wanted_level)

[DISABLE]

wanted_level:
  db 8B 90 98 00 00 00

unregistersymbol(wanted_level)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GTA5.exe"+69D6BF

"GTA5.exe"+69D69D: FF CA                       -  dec edx
"GTA5.exe"+69D69F: 75 51                       -  jne GTA5.exe+69D6F2
"GTA5.exe"+69D6A1: 0F 28 F7                    -  movaps xmm6,xmm7
"GTA5.exe"+69D6A4: EB 4C                       -  jmp GTA5.exe+69D6F2
"GTA5.exe"+69D6A6: F3 0F 10 35 B2 2B 24 01     -  movss xmm6,[GTA5.exe+18E0260]
"GTA5.exe"+69D6AE: EB 42                       -  jmp GTA5.exe+69D6F2
"GTA5.exe"+69D6B0: E8 E7 4D 25 00              -  call GTA5.exe+8F249C
"GTA5.exe"+69D6B5: 48 85 C0                    -  test rax,rax
"GTA5.exe"+69D6B8: 74 38                       -  je GTA5.exe+69D6F2
"GTA5.exe"+69D6BA: E8 DD 4D 25 00              -  call GTA5.exe+8F249C
// ---------- INJECTING HERE ----------
"GTA5.exe"+69D6BF: 8B 90 98 00 00 00           -  mov edx,[rax+00000098]
// ---------- DONE INJECTING  ----------
"GTA5.exe"+69D6C5: 83 EA 02                    -  sub edx,02
"GTA5.exe"+69D6C8: 74 20                       -  je GTA5.exe+69D6EA
"GTA5.exe"+69D6CA: FF CA                       -  dec edx
"GTA5.exe"+69D6CC: 74 D3                       -  je GTA5.exe+69D6A1
"GTA5.exe"+69D6CE: FF CA                       -  dec edx
"GTA5.exe"+69D6D0: 74 0E                       -  je GTA5.exe+69D6E0
"GTA5.exe"+69D6D2: FF CA                       -  dec edx
"GTA5.exe"+69D6D4: 75 1C                       -  jne GTA5.exe+69D6F2
"GTA5.exe"+69D6D6: F3 0F 10 35 E6 2A 24 01     -  movss xmm6,[GTA5.exe+18E01C4]
"GTA5.exe"+69D6DE: EB 12                       -  jmp GTA5.exe+69D6F2
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Unlimited ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GTA5.exe
  Version: 
  Date   : 2023-11-11
  Author : atult

  Unlimited ammo of the selected gun. Clip will not be affected.
}

[ENABLE]

aobscanmodule(unlim_ammo,GTA5.exe,8B 42 20 EB 02) // should be unique
alloc(newmem,$1000,"GTA5.exe"+EB9C7F)

label(code)
label(return)

newmem:

code:
  mov [rdx+20],(int)1000
  mov eax,[rdx+20]
  jmp GTA5.exe+EB9C86
  jmp return

unlim_ammo:
  jmp newmem
return:
registersymbol(unlim_ammo)

[DISABLE]

unlim_ammo:
  db 8B 42 20 EB 02

unregistersymbol(unlim_ammo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GTA5.exe"+EB9C7F

"GTA5.exe"+EB9C61: 74 21                    -  je GTA5.exe+EB9C84
"GTA5.exe"+EB9C63: 80 7A 24 00              -  cmp byte ptr [rdx+24],00
"GTA5.exe"+EB9C67: 75 10                    -  jne GTA5.exe+EB9C79
"GTA5.exe"+EB9C69: 80 7A 25 00              -  cmp byte ptr [rdx+25],00
"GTA5.exe"+EB9C6D: 75 10                    -  jne GTA5.exe+EB9C7F
"GTA5.exe"+EB9C6F: 48 8B 42 08              -  mov rax,[rdx+08]
"GTA5.exe"+EB9C73: F6 40 38 01              -  test byte ptr [rax+38],01
"GTA5.exe"+EB9C77: 74 06                    -  je GTA5.exe+EB9C7F
"GTA5.exe"+EB9C79: 83 7A 20 00              -  cmp dword ptr [rdx+20],00
"GTA5.exe"+EB9C7D: 74 8A                    -  je GTA5.exe+EB9C09
// ---------- INJECTING HERE ----------
"GTA5.exe"+EB9C7F: 8B 42 20                 -  mov eax,[rdx+20]
"GTA5.exe"+EB9C82: EB 02                    -  jmp GTA5.exe+EB9C86
// ---------- DONE INJECTING  ----------
"GTA5.exe"+EB9C84: 33 C0                    -  xor eax,eax
"GTA5.exe"+EB9C86: 48 8B 5C 24 08           -  mov rbx,[rsp+08]
"GTA5.exe"+EB9C8B: C3                       -  ret 
"GTA5.exe"+EB9C8C: 40 53                    -  push rbx
"GTA5.exe"+EB9C8E: 48 83 EC 20              -  sub rsp,20
"GTA5.exe"+EB9C92: 48 8B D9                 -  mov rbx,rcx
"GTA5.exe"+EB9C95: 48 85 D2                 -  test rdx,rdx
"GTA5.exe"+EB9C98: 74 33                    -  je GTA5.exe+EB9CCD
"GTA5.exe"+EB9C9A: F6 82 A0 10 00 00 02     -  test byte ptr [rdx+000010A0],02
"GTA5.exe"+EB9CA1: 74 2A                    -  je GTA5.exe+EB9CCD
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>32</ID>
      <Description>"Walk Speeder"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GTA5.exe
  Version:
  Date   : 2023-11-12
  Author : atult

  This sets the movement speed of player to the value of cont_speed variable. To change the speed change the value of const_speed variable declared below. The player will move according to this speed only when you hold UP and Lshift.
}

[ENABLE]

aobscanmodule(speeder,GTA5.exe,B3 F3 0F 11 83 28 03 00 00) // should be unique
alloc(newmem,$1000,"GTA5.exe"+779E52)
alloc(const_speed,4)
alloc(fastbit,4)
registersymbol(fastbit)
label(code)
label(return)


newmem:

  // back up registers
  sub rsp,20
  movups [rsp],xmm0
  movups [rsp+10],xmm1


  // magnitude of 2d vec
  movss xmm0,[rbx+320]
  movss xmm1,[rbx+324]
  mulss xmm0,xmm0
  mulss xmm1,xmm1
  addss xmm0,xmm1
  sqrtss xmm0,xmm0

  cmp [fastbit],1
  jne code
  // compare limit
  movss xmm1,[const_speed]
  ucomiss xmm0,xmm1
  jae code

// speeder:
  divss xmm1,xmm0

  movss xmm0,[rbx+320]
  mulss xmm0,xmm1
  movss [rbx+320],xmm0

  movss xmm0,[rbx+324]
  mulss xmm0,xmm1
  movss [rbx+324],xmm0

code:
  // restore registers
  movups xmm0,[rsp]
  movups xmm1,[rsp+10]
  add rsp,20

  // original code
  movss [rbx+328],xmm0
  jmp return


const_speed:
dd (float)80



speeder+01:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(speeder)

[DISABLE]

speeder+01:
  db F3 0F 11 83 28 03 00 00

unregistersymbol(speeder)
dealloc(newmem)
dealloc(const_speed)
dealloc(fastbit)
unregistersymbol(fastbit)

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>33</ID>
          <Description>"Helper timer"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}

[ENABLE]

timer=createTimer()
timer.Interval=50
timer.OnTimer=function()
if isKeyPressed(0x26) and isKeyPressed(0xA0)  then writeInteger("fastbit",1) else writeInteger("fastbit",0) end
--up and lshift
end




[DISABLE]
timer.destroy()
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Long jump script"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GTA5.exe
  Version: 
  Date   : 2023-11-12
  Author : atult

  This works only in super jump cheat mode.To make it work [rcx+58] should have more than 1 as value.
}

[ENABLE]

aobscanmodule(INJECT,GTA5.exe,4D 8B 81 B0 00 00 00 F3 0F 10 41 58 B2 01) // should be unique
alloc(newmem,$1000,"GTA5.exe"+2A46FF)

label(code)
label(return)

newmem:

code:
  mov [rcx+58],(float)50
  movups xmm0,[rcx+58]
  mov dl,01
  jmp return

INJECT+08:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+08:
  db 0F 10 41 58 B2 01

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "GTA5.exe"+2A46FF

"GTA5.exe"+2A46E6: 75 03                 -  jne GTA5.exe+2A46EB
"GTA5.exe"+2A46E8: B0 01                 -  mov al,01
"GTA5.exe"+2A46EA: C3                    -  ret 
"GTA5.exe"+2A46EB: 39 15 A3 F6 9C 01     -  cmp [GTA5.exe+1C73D94],edx
"GTA5.exe"+2A46F1: 0F 94 C0              -  sete al
"GTA5.exe"+2A46F4: C3                    -  ret 
"GTA5.exe"+2A46F5: 90                    -  nop 
"GTA5.exe"+2A46F6: E8 4D 8B 81 B0        -  call 7FF64888D248
"GTA5.exe"+2A46FB: 00 00                 -  add [rax],al
"GTA5.exe"+2A46FD: 00 F3                 -  add bl,dh
// ---------- INJECTING HERE ----------
"GTA5.exe"+2A46FF: 0F 10 41 58           -  movups xmm0,[rcx+58]
"GTA5.exe"+2A4703: B2 01                 -  mov dl,01
// ---------- DONE INJECTING  ----------
"GTA5.exe"+2A4705: C1 E8 06              -  shr eax,06
"GTA5.exe"+2A4708: 84 C2                 -  test dl,al
"GTA5.exe"+2A470A: 74 2A                 -  je GTA5.exe+2A4736
"GTA5.exe"+2A470C: F3 0F 10 49 54        -  movss xmm1,[rcx+54]
"GTA5.exe"+2A4711: F3 0F 59 C0           -  mulss xmm0,xmm0
"GTA5.exe"+2A4715: F3 0F 59 C9           -  mulss xmm1,xmm1
"GTA5.exe"+2A4719: F3 0F 58 C8           -  addss xmm1,xmm0
"GTA5.exe"+2A471D: 0F 51 D1              -  sqrtps xmm2,xmm1
"GTA5.exe"+2A4720: 0F 2F 15 3D 03 68 01  -  comiss xmm2,[GTA5.exe+1924A64]
"GTA5.exe"+2A4727: 72 09                 -  jb GTA5.exe+2A4732
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Car pointer Activator"</Description>
      <Options moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : GTA5.exe
  Version: 
  Date   : 2023-11-12
  Author : atult

This script creates a memory address with the name carxptr which stores the address of the x speed of the car you are in currently.
}

[ENABLE]

aobscanmodule(carxspeedptr,GTA5.exe,F3 0F 10 10 F3 0F 10 48 08 48 8B 83) // should be unique
alloc(newmem,$1000,"GTA5.exe"+19784B)
alloc(carxptr,4)
label(code)
label(return)

newmem:
mov [carxptr],rax

code:
  movss xmm2,[rax]
  movss xmm1,[rax+08]
  jmp return

carxspeedptr:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(carxspeedptr)
registersymbol(carxptr)

[DISABLE]

carxspeedptr:
  db F3 0F 10 10 F3 0F 10 48 08

unregistersymbol(carxspeedptr)
unregistersymbol(carxptr)
dealloc(carxptr)
dealloc(newmem)


{
// ORIGINAL CODE - INJECTION POINT: "GTA5.exe"+19784B

"GTA5.exe"+197828: 74 09                    -  je GTA5.exe+197833
"GTA5.exe"+19782A: 48 8B 98 F8 14 00 00     -  mov rbx,[rax+000014F8]
"GTA5.exe"+197831: EB 02                    -  jmp GTA5.exe+197835
"GTA5.exe"+197833: 33 DB                    -  xor ebx,ebx
"GTA5.exe"+197835: 48 85 DB                 -  test rbx,rbx
"GTA5.exe"+197838: 74 46                    -  je GTA5.exe+197880
"GTA5.exe"+19783A: 48 8B 03                 -  mov rax,[rbx]
"GTA5.exe"+19783D: 48 8B CB                 -  mov rcx,rbx
"GTA5.exe"+197840: FF 90 68 03 00 00        -  call qword ptr [rax+00000368]
"GTA5.exe"+197846: F3 0F 10 40 04           -  movss xmm0,[rax+04]
// ---------- INJECTING HERE ----------
"GTA5.exe"+19784B: F3 0F 10 10              -  movss xmm2,[rax]
"GTA5.exe"+19784F: F3 0F 10 48 08           -  movss xmm1,[rax+08]
// ---------- DONE INJECTING  ----------
"GTA5.exe"+197854: 48 8B 83 D0 00 00 00     -  mov rax,[rbx+000000D0]
"GTA5.exe"+19785B: F3 0F 59 D2              -  mulss xmm2,xmm2
"GTA5.exe"+19785F: F3 0F 59 C0              -  mulss xmm0,xmm0
"GTA5.exe"+197863: F3 0F 59 C9              -  mulss xmm1,xmm1
"GTA5.exe"+197867: F3 0F 58 D0              -  addss xmm2,xmm0
"GTA5.exe"+19786B: F3 0F 58 D1              -  addss xmm2,xmm1
"GTA5.exe"+19786F: 0F 51 C2                 -  sqrtps xmm0,xmm2
"GTA5.exe"+197872: 48 85 C0                 -  test rax,rax
"GTA5.exe"+197875: 74 06                    -  je GTA5.exe+19787D
"GTA5.exe"+197877: 80 78 4B 00              -  cmp byte ptr [rax+4B],00
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Speed mode"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}

[ENABLE]

local mul=1.02
local div=1.1

t=getAddressList()
x=t.getMemoryRecordByDescription("xspeed")
y=t.getMemoryRecordByDescription("yspeed")


hk=createHotkey(function()
x.Value=x.Value*mul
y.Value=y.Value*mul
end,0x26)

hk1=createHotkey(function()
x.Value=x.Value/div
y.Value=y.Value/div
end,0x28)


[DISABLE]
hk.destroy()
hk1.destroy()
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Gear mode"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}

if synataxcheck then return end

[ENABLE]

local mul=1.1
local jerk=2
local gearMul=3
local rangeShifter=2
local Top_Speed=8
local speedXString='xspeed'
local speedYString='yspeed'
local speedZString='zspeed'

--Instructions
--mul is the multiplier by which the car will accelerate if the speed of the car is lower than top speed.
--gearMul is the multiplier by which the speed of the car will be brought down if it is higher than the top Speed.
--jerk is the multiplier/divider for mul.Increasing mul results in higher power and decreasing mul results in lower power.
--rangeMultiplier is the multiplier by which the range will be added to calculate the new top speed.
--Up is the initial top speed
--In this,range is adjusted by constants.
--Gear is increased by W and decreased by S
--When trying to use this script in a game just adjust speedStrings , Top_Speed and rangeShifter depending on the game.

local TempUp=Top_Speed


t=getAddressList()
x=t.getMemoryRecordByDescription(speedXString)
y=t.getMemoryRecordByDescription(speedYString)
z=t.getMemoryRecordByDescription(speedZString)


function adjustSpeed(x,y,tempUp,speedUp)
  if tempUp&gt;=Top_Speed then
	r=((x.Value^2)+(y.Value^2)+(z.Value^2))^0.5
	if r&lt;=tempUp then
      if r*mul&lt;=tempUp then
        if speedUp then
          x.Value=x.Value*mul
          y.Value=y.Value*mul
          z.Value=z.Value*mul
        end
      else
        if speedUp then
          local ratio=tempUp/r
          x.Value=x.Value*ratio
          y.Value=y.Value*ratio
          z.Value=z.Value*ratio
        end
      end
    else
      if (r/gearMul)&gt;=tempUp then
        x.Value=x.Value/gearMul
        y.Value=y.Value/gearMul
        z.Value=z.Value/gearMul
      else
        local ratio=tempUp/r
        x.Value=x.Value*ratio
        y.Value=y.Value*ratio
        z.Value=z.Value*ratio
      end
    end
  else
    x.Value=x.Value*(-1)
	y.Value=y.Value*(-1)
	z.Value=z.Value*(-1)
	r=((x.Value^2)+(y.Value^2)+(z.Value^2))^0.5
	gear=(r-Top_Speed)/rangeShifter
	if (gear*100)%100~=0 then
	  TempUp=Top_Speed+(gear+1)*rangeShifter
	else
	  TempUp=Top_Speed+(gear)*rangeShifter
    end
  end
end


normal=createHotkey(function()
adjustSpeed(x,y,TempUp,true)
end,0x26) --UP key


up=createHotkey(function()
TempUp=TempUp*rangeShifter
adjustSpeed(x,y,TempUp,false)
end,0x57) --W

down=createHotkey(function()
TempUp=TempUp/rangeShifter
adjustSpeed(x,y,TempUp,false)
end,0x53) --S

reset=createHotkey(function()
TempUp=Top_Speed
adjustSpeed(x,y,TempUp,false)
end,0x20) --SPACE


reverser=createHotkey(function()
TempUp=-1
adjustSpeed(x,y,TempUp,false)
end,0x52)  --R

mulInc=createHotkey(function()
mul=mul*jerk
end,0x45) --E

mulDec=createHotkey(function()
mul=mul/jerk
end,0x44) --D



[DISABLE]
normal.destroy()
up.destroy()
down.destroy()
reset.destroy()
reverser.destroy()
mulInc.destroy()
mulDec.destroy()
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"xspeed"</Description>
          <Options moAllowManualCollapseAndExpand="1"/>
          <VariableType>Float</VariableType>
          <Address>[carxptr]</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>4</ID>
              <Description>"yspeed"</Description>
              <VariableType>Float</VariableType>
              <Address>+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5</ID>
              <Description>"zspeed"</Description>
              <VariableType>Float</VariableType>
              <Address>+8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>9</ID>
              <Description>"rotation"</Description>
              <VariableType>Float</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :movss xmm2,[rax] (x car speed)</Description>
      <Address>7FF697F6784B</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>19784B</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>40</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>48</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movaps xmm12,[rsi+60] (x coord car pointer)</Description>
      <Address>7FF651A4F7F4</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>117F7F4</ModuleNameOffset>
      <Before>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>B7</Byte>
        <Byte>50</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>66</Byte>
        <Byte>60</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C1</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss xmm2,[rdi] (player health)</Description>
      <Address>7FF6DFF9DFC0</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>41DFC0</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>3B</Byte>
        <Byte>DF</Byte>
        <Byte>75</Byte>
        <Byte>D5</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>17</Byte>
      </Actual>
      <After>
        <Byte>BA</Byte>
        <Byte>8F</Byte>
        <Byte>47</Byte>
        <Byte>CF</Byte>
        <Byte>05</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[rdx+20] (bomb clip)</Description>
      <Address>7FF698C89C7F</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>EB9C7F</ModuleNameOffset>
      <Before>
        <Byte>7A</Byte>
        <Byte>20</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>8A</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>02</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[rcx+00000380] (player coord related)</Description>
      <Address>7FF6980AB29A</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>2DB29A</ModuleNameOffset>
      <Before>
        <Byte>57</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>81</Byte>
        <Byte>80</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>89</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss xmm0,[rbx+00000604] (player movement speed, by default 1)</Description>
      <Address>7FF69892EB8C</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>B5EB8C</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>A8</Byte>
        <Byte>CC</Byte>
        <Byte>B7</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>83</Byte>
        <Byte>04</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>08</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :or [rdi+00000600],eax (movement type pointer)</Description>
      <Address>7FF74617508F</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>79508F</ModuleNameOffset>
      <Before>
        <Byte>E0</Byte>
        <Byte>01</Byte>
        <Byte>C1</Byte>
        <Byte>E0</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>09</Byte>
        <Byte>87</Byte>
        <Byte>00</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
        <Byte>B0</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movaps xmm2,[rax+00000090] (partial coord)</Description>
      <Address>7FF745B7568C</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>19568C</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C2</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov edx,[rax+00000098] (Police wanted level)</Description>
      <Address>7FF79B7DD6BF</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>69D6BF</ModuleNameOffset>
      <Before>
        <Byte>E8</Byte>
        <Byte>DD</Byte>
        <Byte>4D</Byte>
        <Byte>25</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>90</Byte>
        <Byte>98</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>EA</Byte>
        <Byte>02</Byte>
        <Byte>74</Byte>
        <Byte>20</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov eax,[rcx] (money pointer)</Description>
      <Address>7FF6515D14A5</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>D014A5</ModuleNameOffset>
      <Before>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C9</Byte>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss [rbx+00000328],xmm0 (partial player velocity z velocity)</Description>
      <Address>7FF7AB319E52</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>779E52</ModuleNameOffset>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>4D</Byte>
        <Byte>B3</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>83</Byte>
        <Byte>28</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8B</Byte>
        <Byte>2C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss [rdi+00000328],xmm0 (partial velocity pointer when jump)</Description>
      <Address>7FF69896F48C</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>B9F48C</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>3C</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>87</Byte>
        <Byte>28</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8F</Byte>
        <Byte>2C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movaps xmm13,[rbx+10] (walking direction related)</Description>
      <Address>7FF6E0FDD0BE</Address>
      <ModuleName>GTA5.exe</ModuleName>
      <ModuleNameOffset>145D0BE</ModuleNameOffset>
      <Before>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>4C</Byte>
        <Byte>1F</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>6B</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>8D</Byte>
        <Byte>04</Byte>
        <Byte>3F</Byte>
        <Byte>4C</Byte>
        <Byte>8D</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="68" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="Float" Bytesize="4" RLECount="11" DisplayMethod="Unsigned Integer"/>
        <Element Offset="124" Vartype="String" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="Float" Bytesize="4" RLECount="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="156" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="160" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="172" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="176" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="208" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="220" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="224" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="236" Vartype="4 Bytes" Bytesize="4" RLECount="17" DisplayMethod="Unsigned Integer"/>
        <Element Offset="304" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="308" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="312" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="316" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="336" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="344" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="352" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
        <Element Offset="364" Vartype="4 Bytes" Bytesize="4" RLECount="49" DisplayMethod="Unsigned Integer"/>
        <Element Offset="560" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="576" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="588" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="596" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="608" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="616" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="624" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="628" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="632" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="636" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="672" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="680" Vartype="4 Bytes" Bytesize="4" RLECount="12" DisplayMethod="Unsigned Integer"/>
        <Element Offset="728" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="736" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="744" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="748" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="756" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="764" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="800" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="808" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="812" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="824" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="828" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="844" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="852" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="860" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="892" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="900" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="908" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="940" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="948" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="956" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="988" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="996" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1004" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1036" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1044" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1052" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1084" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1092" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1100" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1132" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1140" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1148" Vartype="4 Bytes" Bytesize="4" RLECount="17" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1216" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1232" Vartype="4 Bytes" Bytesize="4" RLECount="40" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1392" Vartype="Pointer" Bytesize="8" RLECount="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1448" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1488" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1496" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1512" Vartype="Float" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1524" Vartype="Double" Bytesize="8" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1548" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1556" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1560" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1600" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="1608" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1612" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1616" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1624" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1628" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1632" Vartype="Float" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1664" Vartype="4 Bytes" Bytesize="4" RLECount="44" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1840" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1848" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1852" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1856" Vartype="4 Bytes" Bytesize="4" RLECount="15" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1916" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1920" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1944" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="1948" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1984" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="1992" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2008" Vartype="Pointer" Bytesize="8" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2040" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2072" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2080" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2104" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2112" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2128" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="2132" Vartype="4 Bytes" Bytesize="4" RLECount="32" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2260" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2268" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2304" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2312" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2320" Vartype="Pointer" Bytesize="8" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2344" Vartype="4 Bytes" Bytesize="4" RLECount="56" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2568" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2576" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2584" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2592" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2608" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2616" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2656" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2664" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2672" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2680" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2700" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2704" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2712" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2716" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2720" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2724" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2728" Vartype="String" Bytesize="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2733" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2736" Vartype="Pointer" Bytesize="8" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2808" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2816" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2832" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2840" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2848" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2852" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="2860" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2864" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2872" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2884" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2892" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2928" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2936" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2960" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2964" Vartype="Float" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2988" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="2996" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3004" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3008" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3012" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3016" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3024" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3032" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3072" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3076" Vartype="4 Bytes" Bytesize="4" RLECount="9" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3112" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3128" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3148" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3152" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3168" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3176" Vartype="Pointer" Bytesize="8" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3200" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3212" Vartype="Double" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3228" Vartype="4 Bytes" Bytesize="4" RLECount="16" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3292" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3296" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3312" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3316" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3328" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3332" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3352" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3360" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3376" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3384" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3388" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3392" Vartype="4 Bytes" Bytesize="4" RLECount="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3424" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3428" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3448" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3456" Vartype="4 Bytes" Bytesize="4" RLECount="24" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3552" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3560" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3564" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3572" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3580" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3584" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3592" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3596" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
        <Element Offset="3608" Vartype="4 Bytes" Bytesize="4" RLECount="7" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3636" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3644" Vartype="Float" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3652" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3664" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3672" Vartype="4 Bytes" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3688" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="3696" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3704" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3708" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3720" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3728" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3736" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3748" Vartype="Byte" Bytesize="1" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3752" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3756" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3776" Vartype="Pointer" Bytesize="8" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3792" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3796" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3804" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3820" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3824" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3828" Vartype="4 Bytes" Bytesize="4" RLECount="25" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3928" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="3932" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3952" Vartype="String" Bytesize="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3957" Vartype="Byte" Bytesize="1" RLECount="3" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3960" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3964" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="3980" Vartype="4 Bytes" Bytesize="4" RLECount="6" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4004" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="4012" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4016" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4024" Vartype="4 Bytes" Bytesize="4" RLECount="10" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4064" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4080" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4084" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Hexadecimal"/>
        <Element Offset="4092" Vartype="Float" Bytesize="4" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
  <Comments>movement speed=health+384
-100
</Comments>
</CheatTable>
