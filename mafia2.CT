<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>12</ID>
      <Description>"iNFiNiTE MONEY"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteMoney,Mafia2.exe,8B 41 10 8B 51 14 C3 cc cc cc cc cc cc  8B 41 08)
Registersymbol(_InfiniteMoney)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [ecx+10],#99999999

originalcode:
mov eax,[ecx+10]
mov edx,[ecx+14]

exit:
jmp returnhere

//"mafia2.exe"+523DB3:
_InfiniteMoney:
jmp newmem
nop
returnhere:




[DISABLE]
Unregistersymbol(_InfiniteMoney)
dealloc(newmem)
//"mafia2.exe"+523DB3:
_InfiniteMoney:
mov eax,[ecx+10]
mov edx,[ecx+14]
//Alt: db 8B 41 10 8B 51 14
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"iNFiNiTE HEALTH"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteHealth,Mafia2.exe,F3 0F 10 86 D0 00 00 00 57 F3 0F 11 44 24 0C )
Registersymbol(_InfiniteHealth)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [esi+000000D0],(float)999999

originalcode:
movss xmm0,[esi+000000D0]

exit:
jmp returnhere

//"mafia2.exe"+2FC5B:
_InfiniteHealth:
jmp newmem
nop
nop
nop
returnhere:




[DISABLE]
Unregistersymbol(_InfiniteHealth)
dealloc(newmem)
//"mafia2.exe"+2FC5B:
_InfiniteHealth:
movss xmm0,[esi+000000D0]
//Alt: db F3 0F 10 86 D0 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>132</ID>
      <Description>"VITO LOCATION"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(locator,PhysXCore.dll,8B 8D EC 00 00 00) // should be unique
alloc(newmem,$200)
alloc(loc,4)
registersymbol(loc)
label(code)
label(return)

newmem:
push edx
mov edx,[mafia2.exe+17ACBDC]
cmp [ebp+EC],edx
pop edx
jne code
mov [loc],ebp

code:
  mov ecx,[ebp+000000EC]
  jmp return

locator:
  jmp newmem
  nop
return:
registersymbol(locator)

[DISABLE]

locator:
  db 8B 8D EC 00 00 00

unregistersymbol(locator)
dealloc(loc)
unregistersymbol(loc)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: PhysXCore.dll+2D897

PhysXCore.dll+2D87E: CC                    - int 3 
PhysXCore.dll+2D87F: CC                    - int 3 
PhysXCore.dll+2D880: 83 EC 1C              - sub esp,1C
PhysXCore.dll+2D883: 55                    - push ebp
PhysXCore.dll+2D884: 8B E9                 - mov ebp,ecx
PhysXCore.dll+2D886: 80 BD 1D 01 00 00 00  - cmp byte ptr [ebp+0000011D],00
PhysXCore.dll+2D88D: 56                    - push esi
PhysXCore.dll+2D88E: 57                    - push edi
PhysXCore.dll+2D88F: 74 6E                 - je PhysXCore.dll+2D8FF
PhysXCore.dll+2D891: 8B 85 E8 00 00 00     - mov eax,[ebp+000000E8]
// ---------- INJECTING HERE ----------
PhysXCore.dll+2D897: 8B 8D EC 00 00 00     - mov ecx,[ebp+000000EC]
// ---------- DONE INJECTING  ----------
PhysXCore.dll+2D89D: 8B 95 F0 00 00 00     - mov edx,[ebp+000000F0]
PhysXCore.dll+2D8A3: 89 44 24 0C           - mov [esp+0C],eax
PhysXCore.dll+2D8A7: 8B 85 F4 00 00 00     - mov eax,[ebp+000000F4]
PhysXCore.dll+2D8AD: 89 4C 24 10           - mov [esp+10],ecx
PhysXCore.dll+2D8B1: 8B 8D F8 00 00 00     - mov ecx,[ebp+000000F8]
PhysXCore.dll+2D8B7: 89 54 24 14           - mov [esp+14],edx
PhysXCore.dll+2D8BB: 8B 95 FC 00 00 00     - mov edx,[ebp+000000FC]
PhysXCore.dll+2D8C1: 89 44 24 18           - mov [esp+18],eax
PhysXCore.dll+2D8C5: 8B 85 00 01 00 00     - mov eax,[ebp+00000100]
PhysXCore.dll+2D8CB: 89 4C 24 1C           - mov [esp+1C],ecx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>134</ID>
          <Description>"X"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[loc]+ec-4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"Y"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[loc]+ec</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>135</ID>
          <Description>"Z"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[loc]+ec+4</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Increase Value</Action>
              <Keys>
                <Key>74</Key>
              </Keys>
              <Value>10</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>157</ID>
          <Description>"X Speed"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[loc]+ec+18</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>158</ID>
          <Description>"Y Speed"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[loc]+ec+18+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"Z Speed"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[loc]+ec+18+8</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>38</Key>
              </Keys>
              <Value>(Z Speed)*1.05</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"iNFiNiTE AMMO iN CLiP"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteAmmoInClip,Mafia2.exe,01 50 0C 8B 01 8B 50 08 FF D2 C2 04 00)
Registersymbol(_InfiniteAmmoInClip)
//"mafia2.exe"+5A46E7:
_InfiniteAmmoInClip:
nop
nop
nop

[DISABLE]
Unregistersymbol(_InfiniteAmmoInClip)
//"mafia2.exe"+5A46E7:
_InfiniteAmmoInClip:
add [eax+0C],edx
mov eax,[ecx]
//Alt: db 01 50 0C 8B 01
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"iNFiNiTE AMMO"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_InfiniteAmmo,Mafia2.exe,8B 40 0C 85 C0 7D 02 33 C0 C3)
Registersymbol(_InfiniteAmmo)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [eax+0C],#999

originalcode:
mov eax,[eax+0C]
test eax,eax

exit:
jmp returnhere

//"mafia2.exe"+523EA3:
_InfiniteAmmo:
jmp newmem
returnhere:




[DISABLE]
Unregistersymbol(_InfiniteAmmo)
dealloc(newmem)
//"mafia2.exe"+523EA3:
_InfiniteAmmo:
mov eax,[eax+0C]
test eax,eax
//Alt: db 8B 40 0C 85 C0
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>148</ID>
      <Description>"CAR"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscanmodule(CAR_speed,PhysXCore.dll,D9 5A 34 D8 42 38) // should be unique
alloc(newmem,$200)
alloc(cptr,4)
registersymbol(cptr)
label(code)
label(return)

newmem:
cmp [edx+8C],#1111752704
jne code
mov [cptr],edx

code:
  fstp dword ptr [edx+34]
  fadd dword ptr [edx+38]
  jmp return

CAR_speed:
  jmp newmem
  nop
return:
registersymbol(CAR_speed)

[DISABLE]

CAR_speed:
  db D9 5A 34 D8 42 38

unregistersymbol(CAR_speed)
dealloc(cptr)
unregistersymbol(cptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: PhysXCore.dll+16A81D

PhysXCore.dll+16A804: D9 41 3C  - fld dword ptr [ecx+3C]
PhysXCore.dll+16A807: D9 42 1C  - fld dword ptr [edx+1C]
PhysXCore.dll+16A80A: D8 C9     - fmul st(0),st(1)
PhysXCore.dll+16A80C: D9 42 20  - fld dword ptr [edx+20]
PhysXCore.dll+16A80F: D8 CA     - fmul st(0),st(2)
PhysXCore.dll+16A811: D9 42 24  - fld dword ptr [edx+24]
PhysXCore.dll+16A814: DE CB     - fmulp st(3),st(0)
PhysXCore.dll+16A816: D9 42 34  - fld dword ptr [edx+34]
PhysXCore.dll+16A819: DE C2     - faddp st(2),st(0)
PhysXCore.dll+16A81B: D9 C9     - fxch st(1)
// ---------- INJECTING HERE ----------
PhysXCore.dll+16A81D: D9 5A 34  - fstp dword ptr [edx+34]
// ---------- DONE INJECTING  ----------
PhysXCore.dll+16A820: D8 42 38  - fadd dword ptr [edx+38]
PhysXCore.dll+16A823: D9 5A 38  - fstp dword ptr [edx+38]
PhysXCore.dll+16A826: D8 42 3C  - fadd dword ptr [edx+3C]
PhysXCore.dll+16A829: D9 5A 3C  - fstp dword ptr [edx+3C]
PhysXCore.dll+16A82C: D9 41 3C  - fld dword ptr [ecx+3C]
PhysXCore.dll+16A82F: D9 42 28  - fld dword ptr [edx+28]
PhysXCore.dll+16A832: D8 C9     - fmul st(0),st(1)
PhysXCore.dll+16A834: D9 42 2C  - fld dword ptr [edx+2C]
PhysXCore.dll+16A837: D8 CA     - fmul st(0),st(2)
PhysXCore.dll+16A839: D9 42 30  - fld dword ptr [edx+30]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>149</ID>
          <Description>"X speed"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[cptr]+34</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>38</Key>
              </Keys>
              <Value>(X speed)*2</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>40</Key>
              </Keys>
              <Value>(X speed)*0.5</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"Y speed"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>[cptr]+34+4</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>38</Key>
              </Keys>
              <Value>(X speed)*2</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>40</Key>
              </Keys>
              <Value>(X speed)*0.5</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>151</ID>
          <Description>"Distinguish"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>[cptr]+8C</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>179</ID>
      <Description>"Quick Car Setup"</Description>
      <Options moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <ShowAsSigned>0</ShowAsSigned>
      <GroupHeader>1</GroupHeader>
      <Address>0</Address>
      <CheatEntries>
        <CheatEntry>
          <ID>176</ID>
          <Description>"Car X"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>+0</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>38</Key>
              </Keys>
              <Value>(Car X)*1.05</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>40</Key>
              </Keys>
              <Value>(Car X)*0.9</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>177</ID>
          <Description>"Car Y"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>+4</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>38</Key>
              </Keys>
              <Value>(Car Y)*1.05</Value>
              <ID>0</ID>
            </Hotkey>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>40</Key>
              </Keys>
              <Value>(Car Y)*0.9</Value>
              <ID>1</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>40</ID>
      <Description>"SUPER CAR POWER"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_SuperCarPower,Mafia2.exe,F3 0F 10 41 48 F3 0F 11 44 24 18 D8 4C 24 18)
Registersymbol(_SuperCarPower)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [ecx+48],(float)99999

originalcode:
movss xmm0,[ecx+48]

exit:
jmp returnhere

//"mafia2.exe"+E02AF9:
_SuperCarPower:
jmp newmem
returnhere:


 
 
[DISABLE]
Unregistersymbol(_SuperCarPower)
dealloc(newmem)
//"mafia2.exe"+E02AF9:
_SuperCarPower:
movss xmm0,[ecx+48]
//Alt: db F3 0F 10 41 48
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>34</ID>
      <Description>"SUPER CAR ENGINE"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_SuperCarEngine,Mafia2.exe,D9 42 68 F3 0F 11 44 24 10 D8 4A 64 5F)
Registersymbol(_SuperCarEngine)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [edx+68],(float)3000

originalcode:
fld dword ptr [edx+68]
movss [esp+10],xmm0

exit:
jmp returnhere

//"mafia2.exe"+E16313:
_SuperCarEngine:
jmp newmem
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_SuperCarEngine)
dealloc(newmem)
//"mafia2.exe"+E16313:
_SuperCarEngine:
fld dword ptr [edx+68]
movss [esp+10],xmm0
//Alt: db D9 42 68 F3 0F 11 44 24 10
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>55</ID>
      <Description>"RAPiD FiRE"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_RapidFire,Mafia2.exe,0F 2F 86 54 01 00 00 ** ** ** ** ** ** ** ** ** ** ** ** 8B 01 8B 50 50)
Registersymbol(_RapidFire)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
cmp dword ptr [esi+2ec],(int)10
jne originalcode
mov dword ptr [esi+00000154],(float)-0.01

originalcode:
comiss xmm0,[esi+00000154]

exit:
jmp returnhere

//"mafia2.exe"+35EDC:
_RapidFire:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_RapidFire)
dealloc(newmem)
//"mafia2.exe"+35EDC:
_RapidFire:
comiss xmm0,[esi+00000154]
//Alt: db 0F 2F 86 54 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"POLiCE iGNORE YOU"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_PoliceIgnoreYou,Mafia2.exe,8B 69 08 8D 54 24 1C 52 )
Registersymbol(_PoliceIgnoreYou)
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [ecx+08],0

originalcode:
mov ebp,[ecx+08]
lea edx,[esp+1C]

exit:
jmp returnhere

//"mafia2.exe"+7E549D:
_PoliceIgnoreYou:
jmp newmem
nop
nop
returnhere:




[DISABLE]
Unregistersymbol(_PoliceIgnoreYou)
dealloc(newmem)
//"mafia2.exe"+7E549D:
_PoliceIgnoreYou:
mov ebp,[ecx+08]
lea edx,[esp+1C]
//Alt: db 8B 69 08 8D 54 24 1C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"NO SPREAD"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_NoSpread,Mafia2.exe,F3 0F 10 80 58 01 00 00)
Registersymbol(_NoSpread)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [eax+00000158],(float)0

originalcode:
movss xmm0,[eax+00000158]

exit:
jmp returnhere

//"mafia2.exe"+281E1:
_NoSpread:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_NoSpread)
dealloc(newmem)
//"mafia2.exe"+281E1:
_NoSpread:
movss xmm0,[eax+00000158]
//Alt: db F3 0F 10 80 58 01 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"NO RECOiL"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_NoRecoil,Mafia2.exe,D9 40 48 83 C0 48 D8 46 24 )
Registersymbol(_NoRecoil)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [eax+48],(float)0
mov dword ptr [eax+4c],(float)0
mov dword ptr [eax+50],(float)0
mov dword ptr [eax+54],(float)0

originalcode:
fld dword ptr [eax+48]
add eax,48

exit:
jmp returnhere

//"mafia2.exe"+3A1D6:
_NoRecoil:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
Unregistersymbol(_NoRecoil)
dealloc(newmem)
//"mafia2.exe"+3A1D6:
_NoRecoil:
fld dword ptr [eax+48]
add eax,48
//Alt: db D9 40 48 83 C0 48
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>156</ID>
      <Description>"Player Base Pointers List"</Description>
      <Options moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>153</ID>
          <Description>"No description"</Description>
          <LastState Value="3A2B9930" RealAddress="01AA1C0C"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>mafia2.exe+16A1C0C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>154</ID>
          <Description>"No description"</Description>
          <LastState Value="3A2B9930" RealAddress="01BAB510"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>mafia2.exe+17AB510</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>155</ID>
          <Description>"No description"</Description>
          <LastState Value="3A2B9930" RealAddress="01BACAE4"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>mafia2.exe+17ACAE4</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>39</ID>
      <Description>"NO CAR ENGiNE DAMAGE"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_NoCarEngineDamage,Mafia2.exe,F3 0F 10 40 1C F3 0F ** ** ** ** ** ** 0F 2F C8 F3 0F 11 44 24 1C )
Registersymbol(_NoCarEngineDamage)
alloc(newmem,2048) //2kb should be enough
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov dword ptr [eax+1C],(float)1

originalcode:
movss xmm0,[eax+1C]

exit:
jmp returnhere

//"mafia2.exe"+E35063:
_NoCarEngineDamage:
jmp newmem
returnhere:


 
 
[DISABLE]
Unregistersymbol(_NoCarEngineDamage)
dealloc(newmem)
//"mafia2.exe"+E35063:
_NoCarEngineDamage:
movss xmm0,[eax+1C]
//Alt: db F3 0F 10 40 1C
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>108</ID>
      <Description>"TELEPORT"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(_Teleport,PhysXCore.dll,8B 85 E8 00 00 00 8B 8D EC 00 00 00 8B 95 F0 00 00 00)
Registersymbol(_Teleport)
alloc(teleportmem,2048)
registersymbol(s_enable)
registersymbol(l_enable)
registersymbol(u_enable)
label(returnteleport)
label(originalcodeteleport)
label(exitteleport)
label(z_coord)
label(x_coord)
label(y_coord)
label(z_coord_undo)
label(x_coord_undo)
label(y_coord_undo)
label(save_coord)
label(load_coord)
label(undo_coord)
label(s_enable)
label(l_enable)
label(u_enable)

//"PhysXCore.dll"+2D611:
_Teleport:
jmp teleportmem
nop
returnteleport:

teleportmem:
cmp [s_enable],1
je save_coord

cmp [l_enable],1
je load_coord

cmp [u_enable],1
je undo_coord

jmp originalcodeteleport

save_coord:
mov [s_enable],0
push edi
mov edi,[ebp+E8]
mov [x_coord],edi
mov edi,[ebp+Ec]
mov [z_coord],edi
mov edi,[ebp+f0]
mov [y_coord],edi
pop edi
jmp originalcodeteleport

load_coord:
mov [l_enable],0
cmp [z_coord],0
je originalcodeteleport
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
push edi
mov edi,[ebp+E8]
mov [x_coord_undo],edi
mov edi,[ebp+Ec]
mov [z_coord_undo],edi
mov edi,[ebp+f0]
mov [y_coord_undo],edi
pop edi
// Save actual Position (for UNDO TELEPORT) when press LOAD POSiTiON
push edi
mov edi,[x_coord]
mov [ebp+E8],edi
mov edi,[z_coord]
mov [ebp+Ec],edi
mov edi,[y_coord]
mov [ebp+f0],edi
pop edi
jmp originalcodeteleport

undo_coord:
mov [l_enable],0
mov [s_enable],0
mov [u_enable],0
cmp [z_coord_undo],0
je originalcodeteleport
push edi
mov edi,[x_coord_undo]
mov [ebp+E8],edi
mov edi,[z_coord_undo]
mov [ebp+Ec],edi
mov edi,[y_coord_undo]
mov [ebp+f0],edi
pop edi

originalcodeteleport:
mov eax,[ebp+000000E8]

exitteleport:
jmp returnteleport

x_coord:
dd 0
z_coord:
dd 0
y_coord:
dd 0
s_enable:
dd 0
l_enable:
dd 0
x_coord_undo:
dd 0
z_coord_undo:
dd 0
y_coord_undo:
dd 0
u_enable:
dd 0
//&gt;&gt;&gt;--Teleport--//



[DISABLE]
dealloc(teleportmem)
dealloc(newmem)
Unregistersymbol(s_enable)
Unregistersymbol(l_enable)
Unregistersymbol(u_enable)
Unregistersymbol(_Teleport)
//"PhysXCore.dll"+2D611:
_Teleport:
mov eax,[ebp+000000E8]
//Alt: db 8B 85 E8 00 00 00








</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>109</ID>
          <Description>"SAVE POSiTiON"</Description>
          <VariableType>Byte</VariableType>
          <Address>s_enable</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>107</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"LOAD POSiTiON"</Description>
          <VariableType>Byte</VariableType>
          <Address>l_enable</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>109</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>111</ID>
          <Description>"UNDO TELEPORT"</Description>
          <VariableType>Byte</VariableType>
          <Address>u_enable</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>106</Key>
              </Keys>
              <Value>1</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>Location</Description>
      <AddressString>PhysXCore.dll+2D75E</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>D8</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>86</Byte>
        <Byte>EC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>60</Byte>
        <Byte>04</Byte>
        <Byte>D9</Byte>
        <Byte>86</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Location 2</Description>
      <AddressString>PhysXCore.dll+2D897</AddressString>
      <Before>
        <Byte>85</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>8D</Byte>
        <Byte>EC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>95</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>CAR SPEED</Description>
      <AddressString>PhysXCore.dll+16A81D</AddressString>
      <Before>
        <Byte>34</Byte>
        <Byte>DE</Byte>
        <Byte>C2</Byte>
        <Byte>D9</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>D9</Byte>
        <Byte>5A</Byte>
        <Byte>34</Byte>
      </Actual>
      <After>
        <Byte>D8</Byte>
        <Byte>42</Byte>
        <Byte>38</Byte>
        <Byte>D9</Byte>
        <Byte>5A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Car speed 2 (first)</Description>
      <AddressString>PhysXCore.dll+1301C9</AddressString>
      <Before>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>CB</Byte>
        <Byte>FF</Byte>
        <Byte>D2</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>4D</Byte>
        <Byte>1C</Byte>
        <Byte>8B</Byte>
        <Byte>50</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Health</Description>
      <AddressString>mafia2.exe+2FA3B</AddressString>
      <Before>
        <Byte>7C</Byte>
        <Byte>24</Byte>
        <Byte>1C</Byte>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>D0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>57</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Shayad Car Power</Description>
      <AddressString>mafia2.exe+1231791</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>24</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>41</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Car Power</Description>
      <AddressString>mafia2.exe+DF9C79</AddressString>
      <Before>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>18</Byte>
        <Byte>EB</Byte>
        <Byte>0B</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>41</Byte>
        <Byte>48</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Movement Speed</Description>
      <AddressString>PhysXCore.dll+1301CB</AddressString>
      <Before>
        <Byte>CB</Byte>
        <Byte>FF</Byte>
        <Byte>D2</Byte>
        <Byte>8B</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>4D</Byte>
        <Byte>1C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>50</Byte>
        <Byte>04</Byte>
        <Byte>89</Byte>
        <Byte>55</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>_DisarmEnemys</Name>
      <Address>7FF7148A28B7</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_EnemyKiller</Name>
      <Address>7FF714980D61</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_GetWaypointCoords</Name>
      <Address>7FF714D04F53</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_SuperBullets</Name>
      <Address>7FF714C01497</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoSilencerDamage</Name>
      <Address>7FF714B37DDA</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_OneHitKills</Name>
      <Address>7FF714C23774</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_NoReload</Name>
      <Address>7FF714C0148E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>_InfiniteMoney</Name>
      <Address>00923DB3</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
